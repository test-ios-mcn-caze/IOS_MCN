name: Pull, Retag, compare and Push Images from ios-mcn-ims

on:
  workflow_dispatch:
    inputs:
      #n5_source_version:
        #description: 'source version tag for n5 (e.g., release-0.0.10)'
        #required: true
        #default: 'release-0.0.1'
      #n5_target_version:
        #description: 'target version tag for n5 (e.g., release-0.0.10)'
        #required: true
        #default: 'release-0.0.1'
      cscf_source_version:
        description: 'source version tag for cscf (e.g., release-0.0.6)'
        required: true
        default: 'release-0.2.1'
      cscf_target_version:
        description: 'target version tag for cscf (e.g., release-0.0.6)'
        required: true
        default: 'release-0.2.1'
      
     

jobs:
  pull_and_push_images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Docker Scout (if not already installed)
        run: |
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
          sh install-scout.sh


     
      - name: Pull, Retag, compare and Push all Images from ios-mcn-ims
        run: |
          
          declare -A SOURCE_VERSIONS=(
            ##["n5"]="${{ github.event.inputs.n5_source_version }}"
            ["cscf"]="${{ github.event.inputs.cscf_source_version }}"
            
            
          )

          declare -A TARGET_VERSIONS=(
            ##["n5"]="${{ github.event.inputs.n5_target_version }}"
            ["cscf"]="${{ github.event.inputs.cscf_target_version }}"
            
            
          )
          
          for PACKAGE in "${!SOURCE_VERSIONS[@]}"; do
            SOURCE_VERSION=${SOURCE_VERSIONS[$PACKAGE]}
            TARGET_VERSION=${TARGET_VERSIONS[$PACKAGE]}
            
            SOURCE_IMAGE="ghcr.io/ios-mcn-ims/${PACKAGE}:${SOURCE_VERSION}" #change the name of organization
            TARGET_IMAGE="ghcr.io/ios-mcn/${PACKAGE}:${TARGET_VERSION}" #change the name of organization
            
            echo "Processing ${PACKAGE}..."
            echo "Pulling ${SOURCE_IMAGE}..."
            docker pull ${SOURCE_IMAGE}
            
            echo "Retagging ${SOURCE_IMAGE} as ${TARGET_IMAGE}..."
            docker tag ${SOURCE_IMAGE} ${TARGET_IMAGE}
            
            echo "Comparing ${SOURCE_IMAGE} and ${TARGET_IMAGE}..."
            docker scout compare ${SOURCE_IMAGE} --to ${TARGET_IMAGE}
            
            echo "Pushing ${TARGET_IMAGE}..."
            docker push ${TARGET_IMAGE}
            
            echo "Completed processing ${PACKAGE}"
          done
